name: GitHub Release from Tag
description: Publish GitHub releases from tags, supporting Markdown and SemVer
author: Ghalactic
inputs:
  assets:
    description: >-
      Assets to be associated with releases, encoded as a YAML (or JSON) array.
      The schema of this value matches the schema for the "assets" config file
      property.
    default: ""
  discussionCategory:
    description: >-
      If specified, a discussion of the specified category is created and linked
      to the release. The value must be a category that already exists in the
      repository.
    default: ""
  discussionReactions:
    description: >-
      A comma-separated list of reactions to create for discussions linked to
      releases. A valid value with all available reactions is
      "+1,-1,laugh,hooray,confused,heart,rocket,eyes".
    default: ""
  draft:
    description: >-
      Set to "true" to produce releases in a draft state.
    default: "" # defaults to the default in the config file (false)
  generateReleaseNotes:
    description: >-
      Set to "true" to append automatically generated release notes to the
      release body.
    default: "" # defaults to the default in the config file (false)
  prerelease:
    description: >-
      Set to "true" or "false" to override the automatic tag name based
      pre-release detection.
    default: "" # defaults to automatic tag name based detection
  reactions:
    description: >-
      A comma-separated list of reactions to create for the release. A valid
      value with all available reactions is "+1,laugh,hooray,heart,rocket,eyes".
    default: ""
  summaryEnabled:
    description: >-
      Set to "false" to disable GitHub Actions job summary creation.
    default: "" # defaults to the default in the config file (true)
  token:
    description: >-
      The GitHub token to use when managing releases.
    default: ${{ github.token }}
outputs:
  assets:
    description: >-
      A JSON array of objects describing the assets that were uploaded to the
      release. Each member of the array has the following fields: apiUrl,
      downloadUrl, id, nodeId, name, label, state, contentType, size,
      downloadCount, createdAt, and updatedAt.
  generatedReleaseNotes:
    description: >-
      The generated release notes produced by GitHub. This output will only be
      available if generated release notes are enabled.
  discussionId:
    description: >-
      The ID of the discussion linked to the published release. This output will
      only be available if discussion creation is enabled.
  discussionNumber:
    description: >-
      The unique number of the discussion linked to the published release. This
      output will only be available if discussion creation is enabled.
  discussionUrl:
    description: >-
      The URL of the user-facing HTML page of the discussion linked to the
      published release. This output will only be available if discussion
      creation is enabled.
  releaseBody:
    description: >-
      The body of the published release.
  releaseId:
    description: >-
      The ID of the published release.
  releaseName:
    description: >-
      The name of the published release.
  releaseUploadUrl:
    description: >-
      The asset upload URL for the published release.
  releaseUrl:
    description: >-
      The URL of the user-facing HTML page for the published release.
  releaseWasCreated:
    description: >-
      Contains "true" if a new release was created, or an empty string
      otherwise.
  tagBody:
    description: >-
      The "body" portion of the tag annotation.
  tagBodyRendered:
    description: >-
      The "body" portion of the tag annotation, rendered as Markdown. This
      represents the Markdown after it has been "processed", and may differ
      greatly from the original input Markdown.
  tagIsSemVer:
    description: >-
      Contains "true" for SemVer version tags, or an empty string otherwise.
  tagIsStable:
    description: >-
      Contains "true" for any tag considered "stable" (e.g. "v1", stable SemVer
      tags), or an empty string otherwise.
  taggerAvatarUrl:
    description: >-
      The avatar URL of the GitHub user who created the tag.
  taggerLogin:
    description: >-
      The username of the GitHub user who created the tag.
  tagName:
    description: >-
      The name of the tag that caused the release to be published.
  tagSubject:
    description: >-
      The "subject" portion of the tag annotation.
branding:
  icon: tag
  color: green
runs:
  using: node16
  main: dist/main.js
